# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class FindElements:

    def __init__(self, root: Optional[TreeNode]):
        self.root=root
        st=[]
        root.val=0
        while root is not None or len(st)!=0:
            while root:
                x=root.val
                st.append(root)
                root=root.left
                if root:
                    root.val=2*x+1
            temp=st.pop()
            
            x=temp.val
            
            root=temp.right
            if root:
                root.val=2*x+2
            
            

        
            
    
        

    def find(self, target: int) -> bool:
        
        return self.helper(self.root,target)
    def helper(self,root,target):
        
        #base
        if root is None:
            return False
        #logic
        
        if root.val==target:
            return True
        return self.helper(root.left,target) or self.helper(root.right,target)
        


# Your FindElements object will be instantiated and called as such:
# obj = FindElements(root)
# param_1 = obj.find(target)