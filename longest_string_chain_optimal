#time-n*l^2,space-n
class Solution:
    def longestStrChain(self, words: List[str]) -> int:
        hmap1={}
        hmap2={}
        le=0
        for word in words:
            hmap2[word]=1
            l=len(word)
            le=max(l,le)
            if l not in hmap1.keys():
                hmap1[l]=[]
            hmap1[l].append(word)
        print(hmap1)
        print(hmap2)
        max_l=1
        for i in range(1,le+1):
            if i in hmap1.keys():
                temp_list=hmap1[i]
                for w in temp_list:
                    for j in range(len(w)):
                        string=w[:j]+w[j+1:]
                        if string in hmap2.keys():
                            hmap2[w]=hmap2[string]+1
                            max_l=max(max_l,hmap2[w])
                    
        return max_l
        